name: Create a PR

on:
  workflow_call:
  workflow_dispatch:

jobs:
  Make-changes:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Getting Dependencies
        id: dependencies
        run: 
          npm install cidr-calc
          npm install @actions/core
          npm install prettify-xml
          npm install xml-js

      - name: Setting up Git
        run: |
          git config --global user.name "Someone"
          git config --global user.email "someone@somewhere.com"

      - name: Checkout main
        id: get-main
        run: |
          git fetch origin main

      - name: creating a new branch
        id: create-branch
        if: steps.get-main.outcome == 'success'
        run: |
          BRANCH_NAME="feature/update-dx-integration-profile-ip-ranges"
          git checkout -b "$BRANCH_NAME" main
          echo "Branch '$BRANCH_NAME' created successfully"

      - name: Track and update github action ip ranges
        id: track-update-profile
        if: ${{steps.dependencies.outcome}} == 'success' && steps.create-branch.outcome == 'success'
        run: 
          output=$(node scripts/js/checkGithubIpRanges.js)

      - name: commiting changes
        id: commit-changes
        if: ${{ steps.track-update-profile.outputs.updateNeeded == 'true'}}
        run: |
          git add .
          git commit -m "Ip Ranges updated on profile"
          echo "Changes committed successfully"

      - name: Pushing branch to origin
        id: push-changes
        if: steps.commit-changes.outcome == 'success'
        run: git push --set-upstream origin feature/update-dx-integration-profile-ip-ranges --force

      - name: Opening a Pull Request
        if: steps.push-changes.outcome == 'success'
        run:
          branch_variable = ${{ steps.create-branch.outputs.BRANCH_NAME }}
          gh pr create -B main -H $branch_variable --title 'Merge $branch_variable into main' --body 'This PR is created to sync the DX Integration profile ip ranges with github actions ip ranges\n This PR is auto created via a scheduled github action to update profile ip ranges on regular basis'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: No update required
        if: ${{ steps.track-update-profile.outputs.updateNeeded == 'false'}}
        run: 
          echo "Profile up to date with github ip ranges"

